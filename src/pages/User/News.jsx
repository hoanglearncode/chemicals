import React, { useState } from 'react';
import { Calendar, Clock, User, Tag, Search, Filter, ChevronRight, TrendingUp, Eye, ArrowRight, Star, Bookmark } from 'lucide-react';

export default function NewsPage() {
  const [selectedCategory, setSelectedCategory] = useState('all');
  const [searchTerm, setSearchTerm] = useState('');

  const categories = [
    { id: 'all', name: 'T·∫•t c·∫£', count: 24 },
    { id: 'industry', name: 'Tin ng√†nh', count: 8 },
    { id: 'products', name: 'S·∫£n ph·∫©m', count: 6 },
    { id: 'technology', name: 'C√¥ng ngh·ªá', count: 5 },
    { id: 'regulations', name: 'Quy ƒë·ªãnh', count: 3 },
    { id: 'company', name: 'C√¥ng ty', count: 2 }
  ];

  const featuredNews = {
    title: 'Xu h∆∞·ªõng H√≥a ch·∫•t Xanh - T∆∞∆°ng lai B·ªÅn v·ªØng c·ªßa Ng√†nh C√¥ng nghi·ªáp',
    excerpt: 'Ng√†nh h√≥a ch·∫•t ƒëang chuy·ªÉn m√¨nh m·∫°nh m·∫Ω theo h∆∞·ªõng xanh v√† b·ªÅn v·ªØng. C√°c doanh nghi·ªáp ti√™n phong √°p d·ª•ng c√¥ng ngh·ªá m·ªõi ƒë·ªÉ gi·∫£m thi·ªÉu t√°c ƒë·ªông m√¥i tr∆∞·ªùng...',
    image: 'üå±',
    category: 'Tin ng√†nh',
    date: '2025-06-05',
    readTime: '5 ph√∫t ƒë·ªçc',
    views: '2.1K',
    author: 'TS. Nguy·ªÖn VƒÉn A'
  };

  const newsList = [
    {
      id: 1,
      title: 'C·∫≠p nh·∫≠t Quy ƒë·ªãnh M·ªõi v·ªÅ An to√†n H√≥a ch·∫•t 2025',
      excerpt: 'B·ªô T√†i nguy√™n v√† M√¥i tr∆∞·ªùng v·ª´a ban h√†nh quy ƒë·ªãnh m·ªõi v·ªÅ qu·∫£n l√Ω v√† s·ª≠ d·ª•ng h√≥a ch·∫•t c√¥ng nghi·ªáp...',
      image: '‚öñÔ∏è',
      category: 'Quy ƒë·ªãnh',
      date: '2025-06-04',
      readTime: '3 ph√∫t ƒë·ªçc',
      views: '1.8K',
      author: 'Bi√™n t·∫≠p vi√™n',
      tags: ['Quy ƒë·ªãnh', 'An to√†n', 'Ph√°p lu·∫≠t']
    },
    {
      id: 2,
      title: 'Ra m·∫Øt D√≤ng S·∫£n ph·∫©m H√≥a ch·∫•t Nano Th·∫ø h·ªá M·ªõi',
      excerpt: 'ChemTech Solutions ch√≠nh th·ª©c gi·ªõi thi·ªáu d√≤ng s·∫£n ph·∫©m h√≥a ch·∫•t nano v·ªõi hi·ªáu su·∫•t v∆∞·ª£t tr·ªôi...',
      image: 'üî¨',
      category: 'S·∫£n ph·∫©m',
      date: '2025-06-03',
      readTime: '4 ph√∫t ƒë·ªçc',
      views: '3.2K',
      author: 'Ph√≤ng Marketing',
      tags: ['S·∫£n ph·∫©m m·ªõi', 'Nano', 'C√¥ng ngh·ªá']
    },
    {
      id: 3,
      title: 'H·ªôi th·∫£o Qu·ªëc t·∫ø v·ªÅ H√≥a ch·∫•t Th√¢n thi·ªán M√¥i tr∆∞·ªùng',
      excerpt: 'S·ª± ki·ªán quy t·ª• c√°c chuy√™n gia h√†ng ƒë·∫ßu th·∫ø gi·ªõi v·ªÅ h√≥a ch·∫•t xanh v√† b·ªÅn v·ªØng...',
      image: 'üåç',
      category: 'Tin ng√†nh',
      date: '2025-06-02',
      readTime: '6 ph√∫t ƒë·ªçc',
      views: '1.5K',
      author: 'Ban t·ªï ch·ª©c',
      tags: ['H·ªôi th·∫£o', 'Qu·ªëc t·∫ø', 'M√¥i tr∆∞·ªùng']
    },
    {
      id: 4,
      title: 'C√¥ng ngh·ªá AI trong Ki·ªÉm so√°t Ch·∫•t l∆∞·ª£ng H√≥a ch·∫•t',
      excerpt: '·ª®ng d·ª•ng tr√≠ tu·ªá nh√¢n t·∫°o ƒëang c√°ch m·∫°ng h√≥a quy tr√¨nh ki·ªÉm so√°t ch·∫•t l∆∞·ª£ng trong s·∫£n xu·∫•t h√≥a ch·∫•t...',
      image: 'ü§ñ',
      category: 'C√¥ng ngh·ªá',
      date: '2025-06-01',
      readTime: '7 ph√∫t ƒë·ªçc',
      views: '2.7K',
      author: 'ThS. Tr·∫ßn Th·ªã B',
      tags: ['AI', 'Ch·∫•t l∆∞·ª£ng', 'T·ª± ƒë·ªông h√≥a']
    },
    {
      id: 5,
      title: 'ƒê·ªëi t√°c Chi·∫øn l∆∞·ª£c v·ªõi T·∫≠p ƒëo√†n H√≥a ch·∫•t Ch√¢u √Çu',
      excerpt: 'ChemTech Solutions k√Ω k·∫øt th·ªèa thu·∫≠n h·ª£p t√°c ƒë·ªôc quy·ªÅn v·ªõi nh√† s·∫£n xu·∫•t h√†ng ƒë·∫ßu ch√¢u √Çu...',
      image: 'ü§ù',
      category: 'C√¥ng ty',
      date: '2025-05-30',
      readTime: '3 ph√∫t ƒë·ªçc',
      views: '4.1K',
      author: 'Ban Gi√°m ƒë·ªëc',
      tags: ['H·ª£p t√°c', 'ƒê·ªëi t√°c', 'Qu·ªëc t·∫ø']
    },
    {
      id: 6,
      title: 'B·∫£o qu·∫£n H√≥a ch·∫•t trong M√πa M∆∞a - L∆∞u √Ω Quan tr·ªçng',
      excerpt: 'H∆∞·ªõng d·∫´n chi ti·∫øt v·ªÅ c√°ch b·∫£o qu·∫£n h√≥a ch·∫•t an to√†n v√† hi·ªáu qu·∫£ trong ƒëi·ªÅu ki·ªán ·∫©m ∆∞·ªõt...',
      image: '‚òÇÔ∏è',
      category: 'H∆∞·ªõng d·∫´n',
      date: '2025-05-28',
      readTime: '5 ph√∫t ƒë·ªçc',
      views: '1.9K',
      author: 'Ph√≤ng K·ªπ thu·∫≠t',
      tags: ['B·∫£o qu·∫£n', 'An to√†n', 'M√πa m∆∞a']
    }
  ];

  const trendingTopics = [
    { name: 'H√≥a ch·∫•t xanh', posts: 15 },
    { name: 'C√¥ng ngh·ªá nano', posts: 12 },
    { name: 'An to√†n lao ƒë·ªông', posts: 8 },
    { name: 'Quy ƒë·ªãnh m·ªõi', posts: 6 },
    { name: 'ƒê·ªïi m·ªõi s√°ng t·∫°o', posts: 4 }
  ];

  const filteredNews = newsList.filter(news => {
    const matchesCategory = selectedCategory === 'all' || news.category.toLowerCase().includes(selectedCategory);
    const matchesSearch = news.title.toLowerCase().includes(searchTerm.toLowerCase()) || 
                         news.excerpt.toLowerCase().includes(searchTerm.toLowerCase());
    return matchesCategory && matchesSearch;
  });

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 via-white to-green-50">
      

      {/* Search & Filter Section */}
      <section className="py-12 px-6 -mt-10 relative z-10">
        <div className="max-w-6xl mx-auto">
          <div className="bg-white rounded-2xl p-8 shadow-2xl">
            <div className="flex flex-col lg:flex-row gap-6 items-center">
              {/* Search */}
              <div className="flex-1 relative">
                <Search className="absolute left-4 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400" />
                <input
                  type="text"
                  placeholder="T√¨m ki·∫øm tin t·ª©c..."
                  value={searchTerm}
                  onChange={(e) => setSearchTerm(e.target.value)}
                  className="w-full pl-12 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all"
                />
              </div>
              
              {/* Categories */}
              <div className="flex flex-wrap gap-2">
                {categories.map((category) => (
                  <button
                    key={category.id}
                    onClick={() => setSelectedCategory(category.id)}
                    className={`px-4 py-2 rounded-lg font-medium transition-all ${
                      selectedCategory === category.id
                        ? 'bg-gradient-to-r from-blue-500 to-green-500 text-white'
                        : 'bg-gray-100 text-gray-700 hover:bg-gray-200'
                    }`}
                  >
                    {category.name} ({category.count})
                  </button>
                ))}
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* Main Content */}
      <section className="py-12 px-6">
        <div className="max-w-6xl mx-auto">
          <div className="grid lg:grid-cols-3 gap-8">
            {/* News List */}
            <div className="lg:col-span-2 space-y-8">
              <div className="flex items-center justify-between">
                <h2 className="text-3xl font-bold text-gray-800">
                  {selectedCategory === 'all' ? 'T·∫•t c·∫£ tin t·ª©c' : categories.find(c => c.id === selectedCategory)?.name}
                </h2>
                <span className="text-gray-600">{filteredNews.length} b√†i vi·∫øt</span>
              </div>

              {/* News Cards */}
              <div className="space-y-8">
                {filteredNews.map((news) => (
                  <div key={news.id} className="bg-white rounded-2xl shadow-lg hover:shadow-xl transition-all duration-300 overflow-hidden group">
                    <div className="p-8">
                      <div className="flex items-start space-x-6">
                        <div className="text-6xl flex-shrink-0 group-hover:scale-110 transition-transform duration-300">
                          {news.image}
                        </div>
                        <div className="flex-1">
                          <div className="flex items-center space-x-4 mb-3">
                            <span className="bg-blue-100 text-blue-600 px-3 py-1 rounded-full text-sm font-semibold">
                              {news.category}
                            </span>
                            <div className="flex items-center space-x-2 text-gray-500 text-sm">
                              <Calendar className="w-4 h-4" />
                              <span>{news.date}</span>
                            </div>
                            <div className="flex items-center space-x-2 text-gray-500 text-sm">
                              <Clock className="w-4 h-4" />
                              <span>{news.readTime}</span>
                            </div>
                            <div className="flex items-center space-x-2 text-gray-500 text-sm">
                              <Eye className="w-4 h-4" />
                              <span>{news.views}</span>
                            </div>
                          </div>
                          
                          <h3 className="text-2xl font-bold text-gray-800 mb-3 group-hover:text-blue-600 transition-colors">
                            {news.title}
                          </h3>
                          
                          <p className="text-gray-600 mb-4 leading-relaxed">
                            {news.excerpt}
                          </p>
                          
                          <div className="flex items-center justify-between">
                            <div className="flex items-center space-x-2 text-sm text-gray-500">
                              <User className="w-4 h-4" />
                              <span>{news.author}</span>
                            </div>
                            <button className="flex items-center space-x-2 text-blue-600 hover:text-blue-700 font-semibold group-hover:translate-x-1 transition-all">
                              <span>ƒê·ªçc th√™m</span>
                              <ArrowRight className="w-4 h-4" />
                            </button>
                          </div>
                          
                          {/* Tags */}
                          <div className="flex flex-wrap gap-2 mt-4">
                            {news.tags?.map((tag, index) => (
                              <span key={index} className="bg-gray-100 text-gray-600 px-2 py-1 rounded text-xs">
                                #{tag}
                              </span>
                            ))}
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                ))}
              </div>

              {/* Load More Button */}
              <div className="text-center">
                <button className="bg-gradient-to-r from-blue-500 to-green-500 text-white font-bold px-8 py-4 rounded-lg hover:from-blue-600 hover:to-green-600 transition-all duration-300 transform hover:-translate-y-1 shadow-lg hover:shadow-xl">
                  Xem th√™m tin t·ª©c
                </button>
              </div>
            </div>

            {/* Sidebar */}
            <div className="space-y-8">
              {/* Trending Topics */}
              <div className="bg-white rounded-2xl p-8 shadow-lg">
                <div className="flex items-center space-x-2 mb-6">
                  <TrendingUp className="w-6 h-6 text-orange-500" />
                  <h3 className="text-2xl font-bold text-gray-800">Ch·ªß ƒë·ªÅ n·ªïi b·∫≠t</h3>
                </div>
                <div className="space-y-4">
                  {trendingTopics.map((topic, index) => (
                    <div key={index} className="flex items-center justify-between p-3 bg-gray-50 rounded-lg hover:bg-gray-100 transition-colors cursor-pointer">
                      <span className="font-medium text-gray-700">#{topic.name}</span>
                      <span className="bg-orange-100 text-orange-600 px-2 py-1 rounded-full text-xs font-semibold">
                        {topic.posts}
                      </span>
                    </div>
                  ))}
                </div>
              </div>

              {/* Newsletter */}
              <div className="bg-gradient-to-br from-blue-500 to-green-500 rounded-2xl p-8 text-white">
                <h3 className="text-2xl font-bold mb-4">ƒêƒÉng k√Ω nh·∫≠n tin</h3>
                <p className="mb-6 text-blue-100">
                  Nh·∫≠n th√¥ng tin m·ªõi nh·∫•t v·ªÅ ng√†nh h√≥a ch·∫•t v√† xu h∆∞·ªõng c√¥ng ngh·ªá
                </p>
                <div className="space-y-4">
                  <input
                    type="email"
                    placeholder="Email c·ªßa b·∫°n"
                    className="w-full px-4 py-3 rounded-lg text-gray-800 focus:ring-2 focus:ring-white focus:ring-opacity-50 transition-all"
                  />
                  <button className="w-full bg-white text-blue-600 font-bold py-3 rounded-lg hover:bg-blue-50 transition-colors">
                    ƒêƒÉng k√Ω ngay
                  </button>
                </div>
              </div>

              {/* Quick Links */}
              <div className="bg-white rounded-2xl p-8 shadow-lg">
                <h3 className="text-2xl font-bold text-gray-800 mb-6">Li√™n k·∫øt nhanh</h3>
                <div className="space-y-3">
                  {[
                    'Danh m·ª•c s·∫£n ph·∫©m',
                    'H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng',
                    'Ch√≠nh s√°ch b·∫£o h√†nh',
                    'H·ªó tr·ª£ k·ªπ thu·∫≠t',
                    'Li√™n h·ªá t∆∞ v·∫•n'
                  ].map((link, index) => (
                    <div key={index} className="flex items-center justify-between p-3 bg-gray-50 rounded-lg hover:bg-gray-100 transition-colors cursor-pointer group">
                      <span className="text-gray-700 group-hover:text-blue-600 transition-colors">{link}</span>
                      <ChevronRight className="w-4 h-4 text-gray-400 group-hover:text-blue-600 group-hover:translate-x-1 transition-all" />
                    </div>
                  ))}
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>
    </div>
  );
}